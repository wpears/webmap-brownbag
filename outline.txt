I'm Wyatt Pearsall, I work in the bathymetry section here at NCRO....

... was going to talk about some apps I built, but instead let's just dive right in and you'll have to trust that I'm not making this up as I go along.


Why web apps.
You hear a lot about web apps, like you hear a lot about the cloud.. maybe a bit too much.

But really, web apps are a great way to share data
  interactivity get your hands on the data before downloading (or never downloading) spatial data is more discoverable, metadata can be first class part of the app
  visualization, see interesting animations, highlight important information
  Audience, everyone with a computer has a web browser. Browsers are free. Knows how to use a web browser.


How web map application work
  Application that runs in your browser, gets data from services on the server

Browser 101
  HTML documents that define structure of a page
  CSS Cascading Style Sheets, turn SLIDE into SLIDE

What about plugins?

What is a server, what does it do
  A program on a computer that accepts requests and returns responses
  web server example -> when you google you send a request with some parameters,
  google's web server receives this processes your data, and responds with a page listing results

  this is similar to how one interacts with the arcgis server you interact with sevices through their URL's,
  and a program on the computer where our server is housed interprets your request (map image, query) and gives you back the appropriate response. we'll see more of this later

So that's how web maps work, now we'll talk about how to build them.

At DWR, 3 supported options, each of which uses this paradigm. make the case for service-backed custom apps.

  Making a GIS web app at DWR means you will likely be using AGOL, Portal, or handwriting an app.
    - There are other things, open source GIS and web mapping solutions (more for trailblazers)

  AGOL and Portal make it fairly easy to throw some data on the web and have a functional map in under an hour, however there are some drawbacks:
    Harder to customize, more limited in features. If you get to the end of what you can do, its easy to feel stuck.. somewhat large hurdle to cross to start customizing.
    Cost. Credits / seats.
      because of this AGOL and Portal are somewhat in hiatus

  That leaves us with custom apps.
    Although more expertise and more time, worth it. Easier to manage, easy to customize,
  don't end up as dependent on esri for features or hacking in your own solutions.
  

Lucky for you, templates. Way to make custom apps easier, faster, while still being easy to customize.

Let's see this in action:

publish some services!
  analyze fix some errors. Talk about sources/servers! Data is registered.
  talk about the choices to make (defaults okayish)

  check out the html rest endpoint, tie it in to the point eariler about what a service is
  But what can we do with these?

  Let's plop them into some templates! And make apps right now.

Template demooo. open the code editor. Talk about servers (location & web server vs. a GIS server, etc.)

Do a slight run through the code. / structure. Show the html, css, js.

Do a check layer!
Do a dropdown layer!

Do multiple check layers!

So it can be easy as that.... case study.


- problem, solution.. why build a web app... something we take for granted
  -share data easier, make data more discoverable, interact easily

I bring this up now because, in order to build an effective web application, its purpose needs to be very clear. The reason for this is twofold:

first, it allows you to reason about application design. What layers should you include, what tools and capabilities. Only if your application has a clear purpose, will you be able to answer these questions properly.

Secondly, it helps you pinpoint the business-case for the application. Saves work, makes data more valuable by helping people interact / understand. These things are what your supervisor and branch chief care about. Making the case well will allow you to spend more time making your application better.

Here'ssss the github link, talk about training as well.

Questions

